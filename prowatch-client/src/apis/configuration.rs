/*
 * Pro-Watch API REST
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 771c6a63-9da8-4300-b275-33061d174776
 *
 * Generated by: https://openapi-generator.tech
 */

use reqwest;
use reqwest::Certificate;
use reqwest::Client;
use std::fs::File;
use std::io::prelude::*;

pub struct Configuration {
    pub base_path: String,
    pub user_agent: Option<String>,
    pub client: reqwest::Client,
    pub basic_auth: Option<BasicAuth>,
    pub oauth_access_token: Option<String>,
    pub bearer_access_token: Option<String>,
    pub api_key: Option<ApiKey>,
    // TODO: take an oauth2 token source, similar to the go one
}

pub type BasicAuth = (String, Option<String>);

pub struct ApiKey {
    pub prefix: Option<String>,
    pub key: String,
}

impl Configuration {
    pub fn new(url: &str, user: &str, pass: &str) -> Self {
        let ba = (user.to_owned(), Some(pass.to_owned()));

        let mut buf = Vec::new();
        let mut client = reqwest::Client::new();
        if let Ok(mut f) = File::open("cert.der") {
            if f.read_to_end(&mut buf).is_ok() {
                let cert = Certificate::from_der(&buf).unwrap();
                client = Client::builder().add_root_certificate(cert).build().unwrap();
            }
        }

        Configuration {
            base_path: url.to_owned(),
            user_agent: Some("OpenAPI-Generator/771c6a63-9da8-4300-b275-33061d174776/rust".to_owned()),
            client,
            basic_auth: Some(ba),
            oauth_access_token: None,
            bearer_access_token: None,
            api_key: None,
        }
    }
}

impl Default for Configuration {
    fn default() -> Self {
        Configuration {
            base_path: "http://localhost:8734".to_owned(),
            user_agent: Some("OpenAPI-Generator/771c6a63-9da8-4300-b275-33061d174776/rust".to_owned()),
            client: Client::new(),
            basic_auth: None,
            oauth_access_token: None,
            bearer_access_token: None,
            api_key: None,
        }
    }
}
